name: Build and Release
on:
    workflow_dispatch:

jobs:
    build-and-release:
        name: "Build and Release"
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  cache: "yarn"
                  node-version: "lts/*"

            # Workaround for yarn install timeouts, especially on Windows
            - run: yarn config set network-timeout 300000

            - name: Read package.json
              id: read_package
              run: |
                  VERSION=$(node -e "console.log(require('./package.json').version)")
                  echo "Version: ${VERSION}"  # This will print the version to the UI
                  echo "version=${VERSION}" >> $GITHUB_ENV

            - name: Install dependencies
              run: yarn install

            - name: Build
              run: yarn build

            - name: Create tag
              run: git tag ${{ env.version }}
              if: env.version != ''

            - name: Push tag
              run: git push origin ${{ env.version }}
              if: env.version != ''

            - name: Create release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ env.version }}
                  release_name: ${{ env.version }}
                  draft: false
                  prerelease: false

            - name: Create tar.gz file
              run: tar -czvf element-${{ env.version }}.tar.gz webapp

            - name: Upload artifact
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ github.token }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_name: element-${{ env.version }}.tar.gz
                  asset_path: element-${{ env.version }}.tar.gz
                  asset_content_type: application/gzip
